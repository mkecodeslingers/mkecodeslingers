== README
= MKE Code Slingers site

== Current versions

* Ruby version - currently running ruby 2.2.4p230 (2016-12-16 revision 53155)
* Rails version - currently running Rails 4.2.5

== Purpose of the project

MKE Code Slingers started as a Meetup group and we decided to create a site for the group in Ruby on Rails as one of the first official group projects.
The Meetup site is used to schedule meetings and push announcements, but it became necessary to have a searchable list of resources and tools.
Besides that core feature, having a public About page for the group seemed like a logical choice for core functionality, along with a hub of where to send new and current members.
Links to key tools that the group uses and voting for upcoming topics are features as well.
Basically, the site is a hub and a repository of info for the group.

== Live site info

We own 2 domains for the site
* mkecodeslingers.com
* mkecodeslingers.org

The site is hosted on Heroku at https://polar-escarpment-3471.herokuapp.com/

= Collaboration Tools
We use Trello for our Agile board of tasks, Slack for general communication for the site, and have regular Scrum meetings (online or in-person).
Contact us at mkecodeslingers@gmail.com to get added to the Trello board and invited to the Slack channel.

= Contributing

* In order to be added as a contributor, contact mkecodeslingers@gmail.com or reach out to us on GitHub.
* Our agile board is on Trello and we use Slack channel for team communication.
* Setup your environment - we followed RailsBridge Docs Installfest http://docs.railsbridge.org/installfest/
* Clone the Github repository - navigate to root folder in console/terminal, and run the command

        git clone https://github.com/mkecodeslingers/mkecodeslingers.git

==== NOTE
In order to install gems for the first time, you will have to do an initial

        bundle install --without production

Then do a commit afterwards to sync the Gemfile.lock


== Git/Github Workflow for the project:

1) Once you are in project folder in Terminal/Console (assuming you are on your local master branch)

        git pull

And you can check to see which branch you are currently on with

        git status

2) Your local and the remote should be the same or synced

3) Create a new local branch for your changes

        git branch <name_of_your_branch>

Make sure your branch name is unique versus branches on Github repository ("savatski_footer" or "mark_index_changes")

4) Switch to the local branch that you just created

        git checkout <name_of_your_branch>

5) Make your local changes, should always smoke test (i.e. click through on localhost to make sure it's not broken) - please fix all known errors first !!!

        git add . <!-- to add all changes (you can specify specific folders or files if you wish)-->
        git commit -am "add a message that is a concise description of what you added/changed"
        git push origin <name_of_your_branch> <!-- to create a remote version of your branch -->

6) Go to the repository page on Github https://github.com/mkecodeslingers/mkecodeslingers

7) Your branch should be listed as "Your recently pushed branches" - you want to click the button "Compare & pull request". Once tests are setup, the tests will automatically run upon creating a pull request. They need to pass before you can merge (unless you wish to override).

8) Add any comments or further descriptions that you wish, then click button "Create pull request".

9) Someone besides the author of the pull request needs to go in and review code for the following things - syntax, logic/functionality, does it fulfill the scope of the task on Trello, etc. You can easily view all code changes by clicking on the commit id in the pull request. Add comments that are specific and helpful. Include links or code snippets if you can to suggest changes. Any updates will be sent to all who added to code review or pull request via Github to your email.

10) Once you click "Merge" and then "Confirm" the changes in the remote branch are merged with the remote Master branch - every so often, please go through and delete your remote branches on Github that are not in use.

11) In order to push the changes to production, you currently need access to the group Heroku account. Plans are in place to implement continuous integration/auto deployment.

== <i>Future things we may want to include:</i>

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions
